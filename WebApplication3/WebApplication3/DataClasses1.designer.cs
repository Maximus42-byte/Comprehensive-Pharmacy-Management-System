#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication3
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="final_project_1")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertmanufacturer(manufacturer instance);
    partial void Updatemanufacturer(manufacturer instance);
    partial void Deletemanufacturer(manufacturer instance);
    partial void Insertmedicine(medicine instance);
    partial void Updatemedicine(medicine instance);
    partial void Deletemedicine(medicine instance);
    partial void Insertpharmacy_list(pharmacy_list instance);
    partial void Updatepharmacy_list(pharmacy_list instance);
    partial void Deletepharmacy_list(pharmacy_list instance);
    partial void Insertpharmacy_repository(pharmacy_repository instance);
    partial void Updatepharmacy_repository(pharmacy_repository instance);
    partial void Deletepharmacy_repository(pharmacy_repository instance);
    partial void Insertpharmacy_staff(pharmacy_staff instance);
    partial void Updatepharmacy_staff(pharmacy_staff instance);
    partial void Deletepharmacy_staff(pharmacy_staff instance);
    partial void Insertterritory(territory instance);
    partial void Updateterritory(territory instance);
    partial void Deleteterritory(territory instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    partial void Insertreserved_medicine(reserved_medicine instance);
    partial void Updatereserved_medicine(reserved_medicine instance);
    partial void Deletereserved_medicine(reserved_medicine instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["final_project_1ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<manufacturer> manufacturers
		{
			get
			{
				return this.GetTable<manufacturer>();
			}
		}
		
		public System.Data.Linq.Table<medicine> medicines
		{
			get
			{
				return this.GetTable<medicine>();
			}
		}
		
		public System.Data.Linq.Table<pharmacy_list> pharmacy_lists
		{
			get
			{
				return this.GetTable<pharmacy_list>();
			}
		}
		
		public System.Data.Linq.Table<pharmacy_repository> pharmacy_repositories
		{
			get
			{
				return this.GetTable<pharmacy_repository>();
			}
		}
		
		public System.Data.Linq.Table<pharmacy_staff> pharmacy_staffs
		{
			get
			{
				return this.GetTable<pharmacy_staff>();
			}
		}
		
		public System.Data.Linq.Table<territory> territories
		{
			get
			{
				return this.GetTable<territory>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
		
		public System.Data.Linq.Table<reserved_medicine> reserved_medicines
		{
			get
			{
				return this.GetTable<reserved_medicine>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.manufacturer")]
	public partial class manufacturer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _row_number;
		
		private string _id;
		
		private string _name;
		
		private string _territory_id;
		
		private string _address;
		
		private string _CEO;
		
		private string _telephone;
		
		private EntitySet<medicine> _medicines;
		
		private EntityRef<territory> _territory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onrow_numberChanging(System.Nullable<int> value);
    partial void Onrow_numberChanged();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onterritory_idChanging(string value);
    partial void Onterritory_idChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnCEOChanging(string value);
    partial void OnCEOChanged();
    partial void OntelephoneChanging(string value);
    partial void OntelephoneChanged();
    #endregion
		
		public manufacturer()
		{
			this._medicines = new EntitySet<medicine>(new Action<medicine>(this.attach_medicines), new Action<medicine>(this.detach_medicines));
			this._territory = default(EntityRef<territory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_row_number", DbType="Int")]
		public System.Nullable<int> row_number
		{
			get
			{
				return this._row_number;
			}
			set
			{
				if ((this._row_number != value))
				{
					this.Onrow_numberChanging(value);
					this.SendPropertyChanging();
					this._row_number = value;
					this.SendPropertyChanged("row_number");
					this.Onrow_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_territory_id", DbType="VarChar(50)")]
		public string territory_id
		{
			get
			{
				return this._territory_id;
			}
			set
			{
				if ((this._territory_id != value))
				{
					if (this._territory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onterritory_idChanging(value);
					this.SendPropertyChanging();
					this._territory_id = value;
					this.SendPropertyChanged("territory_id");
					this.Onterritory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(50)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CEO", DbType="VarChar(50)")]
		public string CEO
		{
			get
			{
				return this._CEO;
			}
			set
			{
				if ((this._CEO != value))
				{
					this.OnCEOChanging(value);
					this.SendPropertyChanging();
					this._CEO = value;
					this.SendPropertyChanged("CEO");
					this.OnCEOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephone", DbType="VarChar(50)")]
		public string telephone
		{
			get
			{
				return this._telephone;
			}
			set
			{
				if ((this._telephone != value))
				{
					this.OntelephoneChanging(value);
					this.SendPropertyChanging();
					this._telephone = value;
					this.SendPropertyChanged("telephone");
					this.OntelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="manufacturer_medicine", Storage="_medicines", ThisKey="id", OtherKey="manufacturer_id")]
		public EntitySet<medicine> medicines
		{
			get
			{
				return this._medicines;
			}
			set
			{
				this._medicines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="territory_manufacturer", Storage="_territory", ThisKey="territory_id", OtherKey="id", IsForeignKey=true)]
		public territory territory
		{
			get
			{
				return this._territory.Entity;
			}
			set
			{
				territory previousValue = this._territory.Entity;
				if (((previousValue != value) 
							|| (this._territory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._territory.Entity = null;
						previousValue.manufacturers.Remove(this);
					}
					this._territory.Entity = value;
					if ((value != null))
					{
						value.manufacturers.Add(this);
						this._territory_id = value.id;
					}
					else
					{
						this._territory_id = default(string);
					}
					this.SendPropertyChanged("territory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_medicines(medicine entity)
		{
			this.SendPropertyChanging();
			entity.manufacturer = this;
		}
		
		private void detach_medicines(medicine entity)
		{
			this.SendPropertyChanging();
			entity.manufacturer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.medicine")]
	public partial class medicine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _row_number;
		
		private string _id;
		
		private string _name;
		
		private string _medicine_price;
		
		private string _manufacturer_id;
		
		private EntitySet<pharmacy_repository> _pharmacy_repositories;
		
		private EntitySet<reserved_medicine> _reserved_medicines;
		
		private EntityRef<manufacturer> _manufacturer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onrow_numberChanging(System.Nullable<int> value);
    partial void Onrow_numberChanged();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onmedicine_priceChanging(string value);
    partial void Onmedicine_priceChanged();
    partial void Onmanufacturer_idChanging(string value);
    partial void Onmanufacturer_idChanged();
    #endregion
		
		public medicine()
		{
			this._pharmacy_repositories = new EntitySet<pharmacy_repository>(new Action<pharmacy_repository>(this.attach_pharmacy_repositories), new Action<pharmacy_repository>(this.detach_pharmacy_repositories));
			this._reserved_medicines = new EntitySet<reserved_medicine>(new Action<reserved_medicine>(this.attach_reserved_medicines), new Action<reserved_medicine>(this.detach_reserved_medicines));
			this._manufacturer = default(EntityRef<manufacturer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_row_number", DbType="Int")]
		public System.Nullable<int> row_number
		{
			get
			{
				return this._row_number;
			}
			set
			{
				if ((this._row_number != value))
				{
					this.Onrow_numberChanging(value);
					this.SendPropertyChanging();
					this._row_number = value;
					this.SendPropertyChanged("row_number");
					this.Onrow_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(250)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medicine_price", DbType="VarChar(50)")]
		public string medicine_price
		{
			get
			{
				return this._medicine_price;
			}
			set
			{
				if ((this._medicine_price != value))
				{
					this.Onmedicine_priceChanging(value);
					this.SendPropertyChanging();
					this._medicine_price = value;
					this.SendPropertyChanged("medicine_price");
					this.Onmedicine_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manufacturer_id", DbType="VarChar(50)")]
		public string manufacturer_id
		{
			get
			{
				return this._manufacturer_id;
			}
			set
			{
				if ((this._manufacturer_id != value))
				{
					if (this._manufacturer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmanufacturer_idChanging(value);
					this.SendPropertyChanging();
					this._manufacturer_id = value;
					this.SendPropertyChanged("manufacturer_id");
					this.Onmanufacturer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="medicine_pharmacy_repository", Storage="_pharmacy_repositories", ThisKey="id", OtherKey="medicine_id")]
		public EntitySet<pharmacy_repository> pharmacy_repositories
		{
			get
			{
				return this._pharmacy_repositories;
			}
			set
			{
				this._pharmacy_repositories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="medicine_reserved_medicine", Storage="_reserved_medicines", ThisKey="id", OtherKey="medicine_id")]
		public EntitySet<reserved_medicine> reserved_medicines
		{
			get
			{
				return this._reserved_medicines;
			}
			set
			{
				this._reserved_medicines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="manufacturer_medicine", Storage="_manufacturer", ThisKey="manufacturer_id", OtherKey="id", IsForeignKey=true)]
		public manufacturer manufacturer
		{
			get
			{
				return this._manufacturer.Entity;
			}
			set
			{
				manufacturer previousValue = this._manufacturer.Entity;
				if (((previousValue != value) 
							|| (this._manufacturer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._manufacturer.Entity = null;
						previousValue.medicines.Remove(this);
					}
					this._manufacturer.Entity = value;
					if ((value != null))
					{
						value.medicines.Add(this);
						this._manufacturer_id = value.id;
					}
					else
					{
						this._manufacturer_id = default(string);
					}
					this.SendPropertyChanged("manufacturer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_pharmacy_repositories(pharmacy_repository entity)
		{
			this.SendPropertyChanging();
			entity.medicine = this;
		}
		
		private void detach_pharmacy_repositories(pharmacy_repository entity)
		{
			this.SendPropertyChanging();
			entity.medicine = null;
		}
		
		private void attach_reserved_medicines(reserved_medicine entity)
		{
			this.SendPropertyChanging();
			entity.medicine = this;
		}
		
		private void detach_reserved_medicines(reserved_medicine entity)
		{
			this.SendPropertyChanging();
			entity.medicine = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pharmacy_list")]
	public partial class pharmacy_list : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _row_number;
		
		private string _id;
		
		private string _pharmacy_name;
		
		private string _address;
		
		private string _manager;
		
		private string _telephone;
		
		private string _territory_id;
		
		private EntitySet<pharmacy_repository> _pharmacy_repositories;
		
		private EntitySet<pharmacy_staff> _pharmacy_staffs;
		
		private EntitySet<reserved_medicine> _reserved_medicines;
		
		private EntityRef<territory> _territory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onrow_numberChanging(System.Nullable<int> value);
    partial void Onrow_numberChanged();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void Onpharmacy_nameChanging(string value);
    partial void Onpharmacy_nameChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnmanagerChanging(string value);
    partial void OnmanagerChanged();
    partial void OntelephoneChanging(string value);
    partial void OntelephoneChanged();
    partial void Onterritory_idChanging(string value);
    partial void Onterritory_idChanged();
    #endregion
		
		public pharmacy_list()
		{
			this._pharmacy_repositories = new EntitySet<pharmacy_repository>(new Action<pharmacy_repository>(this.attach_pharmacy_repositories), new Action<pharmacy_repository>(this.detach_pharmacy_repositories));
			this._pharmacy_staffs = new EntitySet<pharmacy_staff>(new Action<pharmacy_staff>(this.attach_pharmacy_staffs), new Action<pharmacy_staff>(this.detach_pharmacy_staffs));
			this._reserved_medicines = new EntitySet<reserved_medicine>(new Action<reserved_medicine>(this.attach_reserved_medicines), new Action<reserved_medicine>(this.detach_reserved_medicines));
			this._territory = default(EntityRef<territory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_row_number", DbType="Int")]
		public System.Nullable<int> row_number
		{
			get
			{
				return this._row_number;
			}
			set
			{
				if ((this._row_number != value))
				{
					this.Onrow_numberChanging(value);
					this.SendPropertyChanging();
					this._row_number = value;
					this.SendPropertyChanged("row_number");
					this.Onrow_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pharmacy_name", DbType="VarChar(50)")]
		public string pharmacy_name
		{
			get
			{
				return this._pharmacy_name;
			}
			set
			{
				if ((this._pharmacy_name != value))
				{
					this.Onpharmacy_nameChanging(value);
					this.SendPropertyChanging();
					this._pharmacy_name = value;
					this.SendPropertyChanged("pharmacy_name");
					this.Onpharmacy_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(50)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manager", DbType="VarChar(50)")]
		public string manager
		{
			get
			{
				return this._manager;
			}
			set
			{
				if ((this._manager != value))
				{
					this.OnmanagerChanging(value);
					this.SendPropertyChanging();
					this._manager = value;
					this.SendPropertyChanged("manager");
					this.OnmanagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephone", DbType="VarChar(50)")]
		public string telephone
		{
			get
			{
				return this._telephone;
			}
			set
			{
				if ((this._telephone != value))
				{
					this.OntelephoneChanging(value);
					this.SendPropertyChanging();
					this._telephone = value;
					this.SendPropertyChanged("telephone");
					this.OntelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_territory_id", DbType="VarChar(50)")]
		public string territory_id
		{
			get
			{
				return this._territory_id;
			}
			set
			{
				if ((this._territory_id != value))
				{
					if (this._territory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onterritory_idChanging(value);
					this.SendPropertyChanging();
					this._territory_id = value;
					this.SendPropertyChanged("territory_id");
					this.Onterritory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pharmacy_list_pharmacy_repository", Storage="_pharmacy_repositories", ThisKey="id", OtherKey="pharmacy_id")]
		public EntitySet<pharmacy_repository> pharmacy_repositories
		{
			get
			{
				return this._pharmacy_repositories;
			}
			set
			{
				this._pharmacy_repositories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pharmacy_list_pharmacy_staff", Storage="_pharmacy_staffs", ThisKey="id", OtherKey="phrmacy_id")]
		public EntitySet<pharmacy_staff> pharmacy_staffs
		{
			get
			{
				return this._pharmacy_staffs;
			}
			set
			{
				this._pharmacy_staffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pharmacy_list_reserved_medicine", Storage="_reserved_medicines", ThisKey="id", OtherKey="pharmacy_id")]
		public EntitySet<reserved_medicine> reserved_medicines
		{
			get
			{
				return this._reserved_medicines;
			}
			set
			{
				this._reserved_medicines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="territory_pharmacy_list", Storage="_territory", ThisKey="territory_id", OtherKey="id", IsForeignKey=true)]
		public territory territory
		{
			get
			{
				return this._territory.Entity;
			}
			set
			{
				territory previousValue = this._territory.Entity;
				if (((previousValue != value) 
							|| (this._territory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._territory.Entity = null;
						previousValue.pharmacy_lists.Remove(this);
					}
					this._territory.Entity = value;
					if ((value != null))
					{
						value.pharmacy_lists.Add(this);
						this._territory_id = value.id;
					}
					else
					{
						this._territory_id = default(string);
					}
					this.SendPropertyChanged("territory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_pharmacy_repositories(pharmacy_repository entity)
		{
			this.SendPropertyChanging();
			entity.pharmacy_list = this;
		}
		
		private void detach_pharmacy_repositories(pharmacy_repository entity)
		{
			this.SendPropertyChanging();
			entity.pharmacy_list = null;
		}
		
		private void attach_pharmacy_staffs(pharmacy_staff entity)
		{
			this.SendPropertyChanging();
			entity.pharmacy_list = this;
		}
		
		private void detach_pharmacy_staffs(pharmacy_staff entity)
		{
			this.SendPropertyChanging();
			entity.pharmacy_list = null;
		}
		
		private void attach_reserved_medicines(reserved_medicine entity)
		{
			this.SendPropertyChanging();
			entity.pharmacy_list = this;
		}
		
		private void detach_reserved_medicines(reserved_medicine entity)
		{
			this.SendPropertyChanging();
			entity.pharmacy_list = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pharmacy_repository")]
	public partial class pharmacy_repository : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _row_number;
		
		private string _pharmacy_id;
		
		private string _medicine_id;
		
		private string _unit;
		
		private System.Nullable<System.DateTime> _manufacture_date;
		
		private System.Nullable<System.DateTime> _expiration_date;
		
		private string _ID;
		
		private EntityRef<medicine> _medicine;
		
		private EntityRef<pharmacy_list> _pharmacy_list;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onrow_numberChanging(System.Nullable<int> value);
    partial void Onrow_numberChanged();
    partial void Onpharmacy_idChanging(string value);
    partial void Onpharmacy_idChanged();
    partial void Onmedicine_idChanging(string value);
    partial void Onmedicine_idChanged();
    partial void OnunitChanging(string value);
    partial void OnunitChanged();
    partial void Onmanufacture_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onmanufacture_dateChanged();
    partial void Onexpiration_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onexpiration_dateChanged();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    #endregion
		
		public pharmacy_repository()
		{
			this._medicine = default(EntityRef<medicine>);
			this._pharmacy_list = default(EntityRef<pharmacy_list>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_row_number", DbType="Int")]
		public System.Nullable<int> row_number
		{
			get
			{
				return this._row_number;
			}
			set
			{
				if ((this._row_number != value))
				{
					this.Onrow_numberChanging(value);
					this.SendPropertyChanging();
					this._row_number = value;
					this.SendPropertyChanged("row_number");
					this.Onrow_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pharmacy_id", DbType="VarChar(50)")]
		public string pharmacy_id
		{
			get
			{
				return this._pharmacy_id;
			}
			set
			{
				if ((this._pharmacy_id != value))
				{
					if (this._pharmacy_list.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpharmacy_idChanging(value);
					this.SendPropertyChanging();
					this._pharmacy_id = value;
					this.SendPropertyChanged("pharmacy_id");
					this.Onpharmacy_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medicine_id", DbType="VarChar(50)")]
		public string medicine_id
		{
			get
			{
				return this._medicine_id;
			}
			set
			{
				if ((this._medicine_id != value))
				{
					if (this._medicine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmedicine_idChanging(value);
					this.SendPropertyChanging();
					this._medicine_id = value;
					this.SendPropertyChanged("medicine_id");
					this.Onmedicine_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unit", DbType="VarChar(50)")]
		public string unit
		{
			get
			{
				return this._unit;
			}
			set
			{
				if ((this._unit != value))
				{
					this.OnunitChanging(value);
					this.SendPropertyChanging();
					this._unit = value;
					this.SendPropertyChanged("unit");
					this.OnunitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manufacture_date", DbType="Date")]
		public System.Nullable<System.DateTime> manufacture_date
		{
			get
			{
				return this._manufacture_date;
			}
			set
			{
				if ((this._manufacture_date != value))
				{
					this.Onmanufacture_dateChanging(value);
					this.SendPropertyChanging();
					this._manufacture_date = value;
					this.SendPropertyChanged("manufacture_date");
					this.Onmanufacture_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expiration_date", DbType="Date")]
		public System.Nullable<System.DateTime> expiration_date
		{
			get
			{
				return this._expiration_date;
			}
			set
			{
				if ((this._expiration_date != value))
				{
					this.Onexpiration_dateChanging(value);
					this.SendPropertyChanging();
					this._expiration_date = value;
					this.SendPropertyChanged("expiration_date");
					this.Onexpiration_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="medicine_pharmacy_repository", Storage="_medicine", ThisKey="medicine_id", OtherKey="id", IsForeignKey=true)]
		public medicine medicine
		{
			get
			{
				return this._medicine.Entity;
			}
			set
			{
				medicine previousValue = this._medicine.Entity;
				if (((previousValue != value) 
							|| (this._medicine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._medicine.Entity = null;
						previousValue.pharmacy_repositories.Remove(this);
					}
					this._medicine.Entity = value;
					if ((value != null))
					{
						value.pharmacy_repositories.Add(this);
						this._medicine_id = value.id;
					}
					else
					{
						this._medicine_id = default(string);
					}
					this.SendPropertyChanged("medicine");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pharmacy_list_pharmacy_repository", Storage="_pharmacy_list", ThisKey="pharmacy_id", OtherKey="id", IsForeignKey=true)]
		public pharmacy_list pharmacy_list
		{
			get
			{
				return this._pharmacy_list.Entity;
			}
			set
			{
				pharmacy_list previousValue = this._pharmacy_list.Entity;
				if (((previousValue != value) 
							|| (this._pharmacy_list.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._pharmacy_list.Entity = null;
						previousValue.pharmacy_repositories.Remove(this);
					}
					this._pharmacy_list.Entity = value;
					if ((value != null))
					{
						value.pharmacy_repositories.Add(this);
						this._pharmacy_id = value.id;
					}
					else
					{
						this._pharmacy_id = default(string);
					}
					this.SendPropertyChanged("pharmacy_list");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pharmacy_staff")]
	public partial class pharmacy_staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _row_number;
		
		private string _id;
		
		private string _first_name;
		
		private string _last_name;
		
		private string _phrmacy_id;
		
		private EntityRef<pharmacy_list> _pharmacy_list;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onrow_numberChanging(System.Nullable<int> value);
    partial void Onrow_numberChanged();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void Onphrmacy_idChanging(string value);
    partial void Onphrmacy_idChanged();
    #endregion
		
		public pharmacy_staff()
		{
			this._pharmacy_list = default(EntityRef<pharmacy_list>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_row_number", DbType="Int")]
		public System.Nullable<int> row_number
		{
			get
			{
				return this._row_number;
			}
			set
			{
				if ((this._row_number != value))
				{
					this.Onrow_numberChanging(value);
					this.SendPropertyChanging();
					this._row_number = value;
					this.SendPropertyChanged("row_number");
					this.Onrow_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="VarChar(50)")]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="VarChar(50)")]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phrmacy_id", DbType="VarChar(50)")]
		public string phrmacy_id
		{
			get
			{
				return this._phrmacy_id;
			}
			set
			{
				if ((this._phrmacy_id != value))
				{
					if (this._pharmacy_list.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onphrmacy_idChanging(value);
					this.SendPropertyChanging();
					this._phrmacy_id = value;
					this.SendPropertyChanged("phrmacy_id");
					this.Onphrmacy_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pharmacy_list_pharmacy_staff", Storage="_pharmacy_list", ThisKey="phrmacy_id", OtherKey="id", IsForeignKey=true)]
		public pharmacy_list pharmacy_list
		{
			get
			{
				return this._pharmacy_list.Entity;
			}
			set
			{
				pharmacy_list previousValue = this._pharmacy_list.Entity;
				if (((previousValue != value) 
							|| (this._pharmacy_list.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._pharmacy_list.Entity = null;
						previousValue.pharmacy_staffs.Remove(this);
					}
					this._pharmacy_list.Entity = value;
					if ((value != null))
					{
						value.pharmacy_staffs.Add(this);
						this._phrmacy_id = value.id;
					}
					else
					{
						this._phrmacy_id = default(string);
					}
					this.SendPropertyChanged("pharmacy_list");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.territory")]
	public partial class territory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _row_number;
		
		private string _id;
		
		private string _city;
		
		private string _state;
		
		private EntitySet<manufacturer> _manufacturers;
		
		private EntitySet<pharmacy_list> _pharmacy_lists;
		
		private EntitySet<user> _users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onrow_numberChanging(System.Nullable<int> value);
    partial void Onrow_numberChanged();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    #endregion
		
		public territory()
		{
			this._manufacturers = new EntitySet<manufacturer>(new Action<manufacturer>(this.attach_manufacturers), new Action<manufacturer>(this.detach_manufacturers));
			this._pharmacy_lists = new EntitySet<pharmacy_list>(new Action<pharmacy_list>(this.attach_pharmacy_lists), new Action<pharmacy_list>(this.detach_pharmacy_lists));
			this._users = new EntitySet<user>(new Action<user>(this.attach_users), new Action<user>(this.detach_users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_row_number", DbType="Int")]
		public System.Nullable<int> row_number
		{
			get
			{
				return this._row_number;
			}
			set
			{
				if ((this._row_number != value))
				{
					this.Onrow_numberChanging(value);
					this.SendPropertyChanging();
					this._row_number = value;
					this.SendPropertyChanged("row_number");
					this.Onrow_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(50)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="VarChar(50)")]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="territory_manufacturer", Storage="_manufacturers", ThisKey="id", OtherKey="territory_id")]
		public EntitySet<manufacturer> manufacturers
		{
			get
			{
				return this._manufacturers;
			}
			set
			{
				this._manufacturers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="territory_pharmacy_list", Storage="_pharmacy_lists", ThisKey="id", OtherKey="territory_id")]
		public EntitySet<pharmacy_list> pharmacy_lists
		{
			get
			{
				return this._pharmacy_lists;
			}
			set
			{
				this._pharmacy_lists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="territory_user", Storage="_users", ThisKey="id", OtherKey="territory_id")]
		public EntitySet<user> users
		{
			get
			{
				return this._users;
			}
			set
			{
				this._users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_manufacturers(manufacturer entity)
		{
			this.SendPropertyChanging();
			entity.territory = this;
		}
		
		private void detach_manufacturers(manufacturer entity)
		{
			this.SendPropertyChanging();
			entity.territory = null;
		}
		
		private void attach_pharmacy_lists(pharmacy_list entity)
		{
			this.SendPropertyChanging();
			entity.territory = this;
		}
		
		private void detach_pharmacy_lists(pharmacy_list entity)
		{
			this.SendPropertyChanging();
			entity.territory = null;
		}
		
		private void attach_users(user entity)
		{
			this.SendPropertyChanging();
			entity.territory = this;
		}
		
		private void detach_users(user entity)
		{
			this.SendPropertyChanging();
			entity.territory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.users")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _row_number;
		
		private string _id;
		
		private string _first_name;
		
		private string _last_name;
		
		private string _username;
		
		private string _password;
		
		private string _address;
		
		private string _telephone;
		
		private string _territory_id;
		
		private EntitySet<reserved_medicine> _reserved_medicines;
		
		private EntityRef<territory> _territory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onrow_numberChanging(System.Nullable<int> value);
    partial void Onrow_numberChanged();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OntelephoneChanging(string value);
    partial void OntelephoneChanged();
    partial void Onterritory_idChanging(string value);
    partial void Onterritory_idChanged();
    #endregion
		
		public user()
		{
			this._reserved_medicines = new EntitySet<reserved_medicine>(new Action<reserved_medicine>(this.attach_reserved_medicines), new Action<reserved_medicine>(this.detach_reserved_medicines));
			this._territory = default(EntityRef<territory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_row_number", DbType="Int")]
		public System.Nullable<int> row_number
		{
			get
			{
				return this._row_number;
			}
			set
			{
				if ((this._row_number != value))
				{
					this.Onrow_numberChanging(value);
					this.SendPropertyChanging();
					this._row_number = value;
					this.SendPropertyChanged("row_number");
					this.Onrow_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="VarChar(50)")]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="VarChar(50)")]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(50)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephone", DbType="VarChar(50)")]
		public string telephone
		{
			get
			{
				return this._telephone;
			}
			set
			{
				if ((this._telephone != value))
				{
					this.OntelephoneChanging(value);
					this.SendPropertyChanging();
					this._telephone = value;
					this.SendPropertyChanged("telephone");
					this.OntelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_territory_id", DbType="VarChar(50)")]
		public string territory_id
		{
			get
			{
				return this._territory_id;
			}
			set
			{
				if ((this._territory_id != value))
				{
					if (this._territory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onterritory_idChanging(value);
					this.SendPropertyChanging();
					this._territory_id = value;
					this.SendPropertyChanged("territory_id");
					this.Onterritory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_reserved_medicine", Storage="_reserved_medicines", ThisKey="id", OtherKey="user_id")]
		public EntitySet<reserved_medicine> reserved_medicines
		{
			get
			{
				return this._reserved_medicines;
			}
			set
			{
				this._reserved_medicines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="territory_user", Storage="_territory", ThisKey="territory_id", OtherKey="id", IsForeignKey=true)]
		public territory territory
		{
			get
			{
				return this._territory.Entity;
			}
			set
			{
				territory previousValue = this._territory.Entity;
				if (((previousValue != value) 
							|| (this._territory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._territory.Entity = null;
						previousValue.users.Remove(this);
					}
					this._territory.Entity = value;
					if ((value != null))
					{
						value.users.Add(this);
						this._territory_id = value.id;
					}
					else
					{
						this._territory_id = default(string);
					}
					this.SendPropertyChanged("territory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_reserved_medicines(reserved_medicine entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_reserved_medicines(reserved_medicine entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.reserved_medicine")]
	public partial class reserved_medicine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _row_number;
		
		private string _pharmacy_id;
		
		private string _medicine_id;
		
		private string _cont;
		
		private System.Nullable<System.DateTime> _reserved_date;
		
		private string _user_id;
		
		private EntityRef<medicine> _medicine;
		
		private EntityRef<pharmacy_list> _pharmacy_list;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onrow_numberChanging(int value);
    partial void Onrow_numberChanged();
    partial void Onpharmacy_idChanging(string value);
    partial void Onpharmacy_idChanged();
    partial void Onmedicine_idChanging(string value);
    partial void Onmedicine_idChanged();
    partial void OncontChanging(string value);
    partial void OncontChanged();
    partial void Onreserved_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onreserved_dateChanged();
    partial void Onuser_idChanging(string value);
    partial void Onuser_idChanged();
    #endregion
		
		public reserved_medicine()
		{
			this._medicine = default(EntityRef<medicine>);
			this._pharmacy_list = default(EntityRef<pharmacy_list>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_row_number", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int row_number
		{
			get
			{
				return this._row_number;
			}
			set
			{
				if ((this._row_number != value))
				{
					this.Onrow_numberChanging(value);
					this.SendPropertyChanging();
					this._row_number = value;
					this.SendPropertyChanged("row_number");
					this.Onrow_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pharmacy_id", DbType="VarChar(50)")]
		public string pharmacy_id
		{
			get
			{
				return this._pharmacy_id;
			}
			set
			{
				if ((this._pharmacy_id != value))
				{
					if (this._pharmacy_list.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpharmacy_idChanging(value);
					this.SendPropertyChanging();
					this._pharmacy_id = value;
					this.SendPropertyChanged("pharmacy_id");
					this.Onpharmacy_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medicine_id", DbType="VarChar(50)")]
		public string medicine_id
		{
			get
			{
				return this._medicine_id;
			}
			set
			{
				if ((this._medicine_id != value))
				{
					if (this._medicine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmedicine_idChanging(value);
					this.SendPropertyChanging();
					this._medicine_id = value;
					this.SendPropertyChanged("medicine_id");
					this.Onmedicine_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cont", DbType="VarChar(50)")]
		public string cont
		{
			get
			{
				return this._cont;
			}
			set
			{
				if ((this._cont != value))
				{
					this.OncontChanging(value);
					this.SendPropertyChanging();
					this._cont = value;
					this.SendPropertyChanged("cont");
					this.OncontChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reserved_date", DbType="Date")]
		public System.Nullable<System.DateTime> reserved_date
		{
			get
			{
				return this._reserved_date;
			}
			set
			{
				if ((this._reserved_date != value))
				{
					this.Onreserved_dateChanging(value);
					this.SendPropertyChanging();
					this._reserved_date = value;
					this.SendPropertyChanged("reserved_date");
					this.Onreserved_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="VarChar(50)")]
		public string user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="medicine_reserved_medicine", Storage="_medicine", ThisKey="medicine_id", OtherKey="id", IsForeignKey=true)]
		public medicine medicine
		{
			get
			{
				return this._medicine.Entity;
			}
			set
			{
				medicine previousValue = this._medicine.Entity;
				if (((previousValue != value) 
							|| (this._medicine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._medicine.Entity = null;
						previousValue.reserved_medicines.Remove(this);
					}
					this._medicine.Entity = value;
					if ((value != null))
					{
						value.reserved_medicines.Add(this);
						this._medicine_id = value.id;
					}
					else
					{
						this._medicine_id = default(string);
					}
					this.SendPropertyChanged("medicine");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pharmacy_list_reserved_medicine", Storage="_pharmacy_list", ThisKey="pharmacy_id", OtherKey="id", IsForeignKey=true)]
		public pharmacy_list pharmacy_list
		{
			get
			{
				return this._pharmacy_list.Entity;
			}
			set
			{
				pharmacy_list previousValue = this._pharmacy_list.Entity;
				if (((previousValue != value) 
							|| (this._pharmacy_list.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._pharmacy_list.Entity = null;
						previousValue.reserved_medicines.Remove(this);
					}
					this._pharmacy_list.Entity = value;
					if ((value != null))
					{
						value.reserved_medicines.Add(this);
						this._pharmacy_id = value.id;
					}
					else
					{
						this._pharmacy_id = default(string);
					}
					this.SendPropertyChanged("pharmacy_list");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_reserved_medicine", Storage="_user", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.reserved_medicines.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.reserved_medicines.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(string);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
